version: '2'

services:
    nginx:
        restart: always
        image: nginx:1.12-alpine
        ports:
            - 8089:8089
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - static_volume:/app/backend/server/django_static

    postgres:
        restart: always
        image: postgres
        #ports:
        #    - 5433:5432
        expose:
            - 5432
        environment:
            FILLA_DB_USER: letron
            FILLA_DB_PASSWORD: l@tr0n2019
            FILLA_DB_DATABASE: letron_tasks
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres

        volumes:
            - ./docker/postgres/data:/var/lib/postgresql/data
            - ./docker/postgres/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh

    redis:
        image: redis:latest
        restart: unless-stopped

        volumes:
            - ./docker/redis/redis.conf:/etc/redis/redis.conf
            - ./docker/redis/data:/data/
        command: redis-server /etc/redis/redis.conf 
        privileged: true
        #networks:
        #    - default
        #    - redis_net
    
    rabbitmq:
        image: rabbitmq:3.7-alpine
        restart: unless-stopped
        
    wsgiserver:
        extends:
            file: docker-common.yml
            service: backend
        entrypoint: /app/docker/backend/wsgi-entrypoint.sh
        volumes:
            - static_volume:/app/backend/server/django_static
        environment:
            - TZ=Asia/Taipei
    
        links:
            - postgres
            - redis
            - rabbitmq
        expose:
            - 8089
            
    asgiserver:
        extends:
            file: docker-common.yml
            service: backend
        entrypoint: /app/docker/backend/asgi-entrypoint.sh
        links:
            - postgres
            - rabbitmq
            - redis
        ports:
            - 9000:9000
        expose:
            - 9000

    worker:
        extends:
            file: docker-common.yml
            service: backend
        entrypoint: /app/docker/backend/worker-entrypoint.sh
        logging:
          options:
            max-size: "10m"
            max-file: "3"
        links:
            - postgres
            - rabbitmq
            - redis
    periodic:
        extends:
            file: docker-common.yml
            service: backend
        entrypoint: /app/docker/backend/periodic-entrypoint.sh
        links:
            - redis

volumes:
    static_volume: {}
#networks:
#  redis_net:
#    external: true
